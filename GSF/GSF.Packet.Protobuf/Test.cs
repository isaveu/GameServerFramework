// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Foo.Bar
{

    /// <summary>Holder for reflection information generated from test.proto</summary>
    public static partial class TestReflection
    {

        #region Descriptor
        /// <summary>File descriptor for test.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static TestReflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "Cgp0ZXN0LnByb3RvEgdmb28uYmFyIkwKDVNlYXJjaFJlcXVlc3QSDQoFcXVl",
                  "cnkYASABKAkSEwoLcGFnZV9udW1iZXIYAiABKAUSFwoPcmVzdWx0X3Blcl9w",
                  "YWdlGAMgASgFYgZwcm90bzM="));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { },
                new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Foo.Bar.SearchRequest), global::Foo.Bar.SearchRequest.Parser, new[]{ "Query", "PageNumber", "ResultPerPage" }, null, null, null)
                }));
        }
        #endregion

    }
    #region Messages
    public sealed partial class SearchRequest : pb::IMessage<SearchRequest>
    {
        private static readonly pb::MessageParser<SearchRequest> _parser = new pb::MessageParser<SearchRequest>(() => new SearchRequest());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SearchRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Foo.Bar.TestReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SearchRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SearchRequest(SearchRequest other) : this()
        {
            query_ = other.query_;
            pageNumber_ = other.pageNumber_;
            resultPerPage_ = other.resultPerPage_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SearchRequest Clone()
        {
            return new SearchRequest(this);
        }

        /// <summary>Field number for the "query" field.</summary>
        public const int QueryFieldNumber = 1;
        private string query_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Query
        {
            get { return query_; }
            set
            {
                query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "page_number" field.</summary>
        public const int PageNumberFieldNumber = 2;
        private int pageNumber_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int PageNumber
        {
            get { return pageNumber_; }
            set
            {
                pageNumber_ = value;
            }
        }

        /// <summary>Field number for the "result_per_page" field.</summary>
        public const int ResultPerPageFieldNumber = 3;
        private int resultPerPage_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ResultPerPage
        {
            get { return resultPerPage_; }
            set
            {
                resultPerPage_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as SearchRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SearchRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Query != other.Query) return false;
            if (PageNumber != other.PageNumber) return false;
            if (ResultPerPage != other.ResultPerPage) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Query.Length != 0) hash ^= Query.GetHashCode();
            if (PageNumber != 0) hash ^= PageNumber.GetHashCode();
            if (ResultPerPage != 0) hash ^= ResultPerPage.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Query.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Query);
            }
            if (PageNumber != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(PageNumber);
            }
            if (ResultPerPage != 0)
            {
                output.WriteRawTag(24);
                output.WriteInt32(ResultPerPage);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Query.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
            }
            if (PageNumber != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageNumber);
            }
            if (ResultPerPage != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResultPerPage);
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SearchRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Query.Length != 0)
            {
                Query = other.Query;
            }
            if (other.PageNumber != 0)
            {
                PageNumber = other.PageNumber;
            }
            if (other.ResultPerPage != 0)
            {
                ResultPerPage = other.ResultPerPage;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            Query = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            PageNumber = input.ReadInt32();
                            break;
                        }
                    case 24:
                        {
                            ResultPerPage = input.ReadInt32();
                            break;
                        }
                }
            }
        }

    }

    #endregion

}

#endregion Designer generated code
